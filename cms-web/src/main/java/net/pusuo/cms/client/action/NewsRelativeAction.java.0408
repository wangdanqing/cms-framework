package com.hexun.cms.client.action;

import javax.servlet.http.*;

import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionError;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.hexun.cms.client.action.BaseForm;
import com.hexun.cms.client.ItemManager;
import com.hexun.cms.client.util.Relatives;
import com.hexun.cms.client.util.SogouRelatives;
import com.hexun.cms.ItemInfo;
import com.hexun.cms.core.*;
import com.hexun.cms.client.auth.Authentication;
import com.hexun.cms.client.auth.AuthenticationFactory;
import com.hexun.cms.client.auth.exception.UnauthenticatedException;

public class NewsRelativeAction extends BaseAction {
	
	private static final Log LOG = LogFactory.getLog(NewsRelativeAction.class);
	
	public String retrievePermission() {
		return "news";
    }

	public ActionForward view(ActionMapping mapping,
				ActionForm form,
				HttpServletRequest request,
				HttpServletResponse response) {

		ActionForward ret = null;
		ActionErrors errors = new ActionErrors();
		BaseForm dForm = (BaseForm)form;
		Integer id = ((Integer)dForm.get("id"));
		News news = null;

		try{
			if ( id != null ) {
				news =(News)ItemManager.getInstance().get(id,ItemInfo.getItemClass(ItemInfo.NEWS_TYPE));
                
				String newsRelative = SogouRelatives.readRelativeNewsContent(news);
				if (newsRelative != null && newsRelative.trim().length() > 0) {
					newsRelative = newsRelative.replaceAll(">" + SogouRelatives.dot + "<", " class=relationNews><");
				}
				if (newsRelative == null)
					newsRelative = "";
				
				request.setAttribute("newsresults",newsRelative);
				ret =  mapping.findForward("relativeNews");
			} else {
				errors.add("errors.item.notfound", new ActionError("errors.item.notfound"));
				ret = mapping.findForward("failure");
			}
		}catch(Exception e){
			errors.add("errors.item.view", new ActionError("errors.item.view"));
			LOG.error("NewsRelativeAction view error . "+e.toString());
		}

		return ret;
	}	

	public ActionForward save (ActionMapping mapping,
				   ActionForm form,
				   HttpServletRequest request,
				   HttpServletResponse response) {
		ActionErrors errors = new ActionErrors();
		BaseForm relativeForm = (BaseForm)form;

		Authentication auth = null;
		try {
            auth = AuthenticationFactory.getAuthentication(request, response);
		} catch (UnauthenticatedException ue){
        	errors.add("auth.failure", new ActionError("auth.failure"));
        	return mapping.findForward("failure");
        }	

		News news = null;
		
		try {
			int newsId = -1;
			newsId = ((Integer)relativeForm.get("id")).intValue();
			if (newsId > 0) {
				news =(News)ItemManager.getInstance().get(new Integer(newsId),
                		ItemInfo.getItemClass(ItemInfo.NEWS_TYPE));
			}
			
			String newsRelative = (String)relativeForm.get("relationContent");
			request.setAttribute("newsresults", newsRelative);
			
			if (newsRelative != null && newsRelative.trim().length() > 0) {
				newsRelative = newsRelative.replaceAll(" class=relationNews><", ">" + SogouRelatives.dot + "<");
			}
			if (newsRelative == null)
				newsRelative = "";
			SogouRelatives.writeRelativeNewsContent(news, newsRelative);
		} catch(Exception e) {
        	errors.add("errors.item.save", new ActionError("errors.item.save"));
        	LOG.error("PictureAction save error . " + e.toString());		
		}
		
		return mapping.findForward("relativeNews");
	}
	
	public ActionForward searchRelative(ActionMapping mapping,
				ActionForm form,
				HttpServletRequest request,
				HttpServletResponse response) {
		ActionForward ret = null;
		ActionErrors errors = new ActionErrors();
		
		BaseForm dForm = (BaseForm)form;
		Integer id = ((Integer)dForm.get("id"));
		String keyword = ((String)dForm.get("keyword")).trim();
		int listNum = ((Integer)dForm.get("listNum")).intValue();

		try{
		    News newsOld = (News)ItemManager.getInstance().get(id, News.class);
		    
		    News news = (News)ItemInfo.getItemByType(ItemInfo.NEWS_TYPE);
		    news.setId(newsOld.getId());
		    news.setUrl(newsOld.getUrl());
		    news.setChannel(newsOld.getChannel());
		    news.setKeyword(keyword);
		    
			Relatives relatives = SogouRelatives.getSogouRelatives(news, listNum, 0, 0, 0);
			String results = SogouRelatives.getRelativeNewsContent4Decorate(relatives, "class=relationNews");
			if (results == null)
				results = "";
			
			dForm.set("id",id);
			dForm.set("keyword",keyword);
			dForm.set("listNum",new Integer(listNum));
			request.setAttribute("searchresults",results);

			String newsRelative = ((String)dForm.get("relationContent")).trim();
            request.setAttribute("newsresults",newsRelative);
			
			ret =  mapping.findForward("relativeNews");
		} catch(Exception e){
			errors.add("errors.item.view", new ActionError("errors.item.view"));
			LOG.error("NewsRelativeAction search error . "+e.toString());
		}

		return ret;
	}
}
